version: '3'

services:
  bot_image:
    build: bot/
    container_name: bot_image
    environment:
      HOST: ${RM_HOST}
      PORT: ${RM_PORT}
      USER: ${RM_USER}
      PASSWORD: ${RM_PASSWORD}
      TOKEN: ${TOKEN}
      DBHOST: ${DB_HOST}
      DBPORT: ${DB_PORT}
      DBUSER: ${DB_USER}
      DBPASSWORD: ${DB_PASSWORD}
      DBNAME: ${DB_DATABASE}
    env_file:
      - .env
    networks:
      - internet
      - localnet
  
  db_image:
    build:
      context: .
      args:
        DB_REPL_USER: ${DB_REPL_USER}
        DB_REPL_PASSWORD: ${DB_REPL_PASSWORD}
      dockerfile: db/Dockerfile
    container_name: db_image
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication all 0.0.0.0/0 md5"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    env_file:
      - .env
    networks:
      - localnet

  db_repl_image:
    build:
      context: .
      args:
        DB_REPL_USER: ${DB_REPL_USER}
        DB_HOST: ${DB_HOST}
        DB_REPL_PASSWORD: ${DB_REPL_PASSWORD}
      dockerfile: db_repl/Dockerfile
    container_name: db_repl_image
    environment:
      PGPASSWORD: ${DB_REPL_PASSWORD}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      DB_REPL_PASSWORD: ${DB_REPL_PASSWORD}
      DB_HOST: ${DB_HOST}
    env_file:
      - .env
    depends_on:
      - db_image
    networks:
      - localnet

networks:
  internet:
    name: internet
    driver: bridge
  localnet:
    name: localnet
    driver: bridge